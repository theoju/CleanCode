// <assemblyHash>780cc8ab</assemblyHash>
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.0.0
//     
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     This source code was auto-generated by Microsoft Moles 2010, Version=0.94.0.0.
// </auto-generated>
#pragma warning disable 0067, 0108, 0618
#line hidden
extern alias dirccccd;
extern alias dirccccdc;
extern alias mmf;

[assembly: mmf::Microsoft.Moles.Framework.MoledAssembly("DesignItRight.CleanCodeCodeContractsDemo")]
[assembly: global::System.Reflection.AssemblyCompany("None")]
[assembly: global::System.Reflection.AssemblyConfiguration("")]
[assembly: global::System.Reflection.AssemblyFileVersion("1.0.0.0")]
[assembly: global::System.Reflection.AssemblyProduct("DesignItRight.CleanCodeCodeContractsDemo")]
[assembly: global::System.Reflection.AssemblyVersion("1.0.0.0")]
[assembly: global::System.Runtime.CompilerServices.InternalsVisibleTo("DesignItRight.CleanCodeCodeContractsDemo.Explorables")]
[assembly: global::System.Runtime.CompilerServices.InternalsVisibleTo("DesignItRight.CleanCodeCodeContractsDemo.Tests")]
[module: mmf::Microsoft.Moles.Framework.Moles.MolesInstrument]
namespace DesignItRight.Internal.CleanCodeDemo.ContactManagement.Moles
{
    /// <summary>Mole type of <see cref="T:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = Contact")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MContact
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact>
    {
        /// <summary>Initializes a new mole</summary>
        public MContact()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MContact(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.FirstName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string> FirstNameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_FirstName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), 
                         (object)null, "get_FirstName");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.FirstName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string> FirstNameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_FirstName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), 
                         (object)null, "set_FirstName", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.LastName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string> LastNameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_LastName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), 
                         (object)null, "get_LastName");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.LastName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string> LastNameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_LastName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), 
                         (object)null, "set_LastName", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.MiddleName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string> MiddleNameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MiddleName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), 
                         (object)null, "get_MiddleName");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.MiddleName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string> MiddleNameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MiddleName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), 
                         (object)null, "set_MiddleName", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.PhoneNumber"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string> PhoneNumberGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PhoneNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), 
                         (object)null, "get_PhoneNumber");
                }
            }

            /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.PhoneNumber"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string> PhoneNumberSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PhoneNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), 
                         (object)null, "set_PhoneNumber", typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Moles.MContact.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Moles.MContact.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Moles.MContact Bind(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, 
                                                                  global::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Moles.MContact, 
                                                                  dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.FirstName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> FirstNameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_FirstName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string>(value)), 
                     typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), base.Instance, "get_FirstName");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.FirstName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> FirstNameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_FirstName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string>(value)), 
                     typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), base.Instance, "set_FirstName", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.LastName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> LastNameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_LastName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string>(value)), 
                     typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), base.Instance, "get_LastName");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.LastName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> LastNameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_LastName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string>(value)), 
                     typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), base.Instance, "set_LastName", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.MiddleName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> MiddleNameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MiddleName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string>(value)), 
                     typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), base.Instance, "get_MiddleName");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.MiddleName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> MiddleNameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MiddleName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string>(value)), 
                     typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), base.Instance, "set_MiddleName", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.PhoneNumber"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> PhoneNumberGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PhoneNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string>(value)), 
                     typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), base.Instance, "get_PhoneNumber");
            }
        }

        /// <summary>Sets the mole of <see cref="P:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact.PhoneNumber"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> PhoneNumberSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PhoneNumber", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact, string>(value)), 
                     typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact), base.Instance, "set_PhoneNumber", typeof(string));
            }
        }
    }
}
namespace DesignItRight.CleanCodeDemo.ContactManagement.Moles
{
    /// <summary>Mole type of <see cref="T:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ContactManager")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MContactManager
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager>
    {
        /// <summary>Initializes a new mole</summary>
        public MContactManager()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MContactManager(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.CanDelete(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager, dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> CanDeleteIContact
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanDelete", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), 
                         (object)null, "CanDelete", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.CanLoad"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> CanLoad
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanLoad", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), (object)null, "CanLoad");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.CanSave(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager, dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> CanSaveIContact
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanSave", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), 
                         (object)null, "CanSave", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.Delete(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager, dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> DeleteIContact
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Delete", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), 
                         (object)null, "Delete", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.Load"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager, dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact> Load
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), (object)null, "Load");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.ObjectInvariant"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager> ObjectInvariant
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ObjectInvariant", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), 
                         (object)null, "ObjectInvariant");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.Save(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager, dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> SaveIContact
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Save", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), 
                         (object)null, "Save", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DesignItRight.CleanCodeDemo.ContactManagement.Moles.MContactManager.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DesignItRight.CleanCodeDemo.ContactManagement.Moles.MContactManager.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DesignItRight.CleanCodeDemo.ContactManagement.Moles.MContactManager Bind(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContactManager target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager, 
                                                                  global::DesignItRight.CleanCodeDemo.ContactManagement.Moles.MContactManager, 
                                                                  dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContactManager>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.CanDelete(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> CanDeleteIContact
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanDelete", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager, 
                                                                                                                                                 dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, 
                                                                                                                                                 dirccccdc::DesignItRight.Infrastructure.Common.OperationResult>(value)), 
                                                                                       typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), 
                                                                                       base.Instance, "CanDelete", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.CanLoad"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> CanLoad
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanLoad", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager, 
                                                                                                                                                 dirccccdc::DesignItRight.Infrastructure.Common.OperationResult>(value)), 
                                                                                       typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), base.Instance, "CanLoad");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.CanSave(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> CanSaveIContact
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanSave", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager, 
                                                                                                                                                 dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, 
                                                                                                                                                 dirccccdc::DesignItRight.Infrastructure.Common.OperationResult>(value)), 
                                                                                       typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), 
                                                                                       base.Instance, "CanSave", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.#ctor(DesignItRight.Infrastructure.Common.Logging.ILogger,DesignItRight.CleanCodeDemo.ContactManagement.IContactPersistence)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager, dirccccdc::DesignItRight.Infrastructure.Common.Logging.ILogger, dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContactPersistence> ConstructorILoggerIContactPersistence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), (object)null, 
                     ".ctor", typeof(dirccccdc::DesignItRight.Infrastructure.Common.Logging.ILogger), 
                              typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContactPersistence));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.Delete(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> DeleteIContact
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Delete", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager, 
                                                                                                                                                 dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, 
                                                                                                                                                 dirccccdc::DesignItRight.Infrastructure.Common.OperationResult>(value)), 
                                                                                       typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), 
                                                                                       base.Instance, "Delete", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.Load"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact> Load
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager, 
                                                                                                                                                 dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact>(value)), 
                                                                                       typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), base.Instance, "Load");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.ObjectInvariant"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action ObjectInvariant
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ObjectInvariant", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)(
                                                                                                                   mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager>(value)
                                                                                                                   ), typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), base.Instance, "ObjectInvariant");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.Save(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> SaveIContact
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Save", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager, 
                                                                                                                                                 dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, 
                                                                                                                                                 dirccccdc::DesignItRight.Infrastructure.Common.OperationResult>(value)), 
                                                                                       typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), 
                                                                                       base.Instance, "Save", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager.ValidateContactIsNotNull(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> ValidateContactIsNotNullIContact
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateContactIsNotNull", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager), 
                     "ValidateContactIsNotNull", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
            }
        }
    }
}
namespace DesignItRight.Internal.CleanCodeDemo.ContactManagement.Moles
{
    /// <summary>Mole type of <see cref="T:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = DummyExampleContactPersistence")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MDummyExampleContactPersistence
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence>
    {
        /// <summary>Initializes a new mole</summary>
        public MDummyExampleContactPersistence()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MDummyExampleContactPersistence(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence.CanDelete(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence, dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> CanDeleteIContact
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanDelete", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence), 
                         (object)null, "CanDelete", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence.CanLoad"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> CanLoad
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanLoad", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence), 
                         (object)null, "CanLoad");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence.CanSave(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence, dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> CanSaveIContact
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanSave", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence), 
                         (object)null, "CanSave", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence.Delete(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence, dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> DeleteIContact
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Delete", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence), 
                         (object)null, "Delete", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence.Load"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence, dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact> Load
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence), 
                         (object)null, "Load");
                }
            }

            /// <summary>Sets the mole of <see cref="M:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence.Save(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence, dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> SaveIContact
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Save", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence), 
                         (object)null, "Save", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Moles.MDummyExampleContactPersistence.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Moles.MDummyExampleContactPersistence.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Moles.MDummyExampleContactPersistence Bind(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContactPersistence target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence, 
                    global::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Moles.MDummyExampleContactPersistence, 
                    dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContactPersistence>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence.CanDelete(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> CanDeleteIContact
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanDelete", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence, 
                                                          dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, 
                                                          dirccccdc::DesignItRight.Infrastructure.Common.OperationResult>(value)), 
                     typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence), 
                     base.Instance, "CanDelete", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence.CanLoad"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> CanLoad
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanLoad", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence, 
                                                          dirccccdc::DesignItRight.Infrastructure.Common.OperationResult>(value)), 
                     typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence), base.Instance, "CanLoad");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence.CanSave(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> CanSaveIContact
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanSave", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence, 
                                                          dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, 
                                                          dirccccdc::DesignItRight.Infrastructure.Common.OperationResult>(value)), 
                     typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence), 
                     base.Instance, "CanSave", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence.#ctor(DesignItRight.Infrastructure.Common.Logging.ILogger)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence, dirccccdc::DesignItRight.Infrastructure.Common.Logging.ILogger> ConstructorILogger
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence), 
                     (object)null, ".ctor", typeof(dirccccdc::DesignItRight.Infrastructure.Common.Logging.ILogger));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence.CreateDummyContact"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact> CreateDummyContact
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDummyContact", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence), "CreateDummyContact");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence.Delete(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> DeleteIContact
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Delete", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence, 
                                                          dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, 
                                                          dirccccdc::DesignItRight.Infrastructure.Common.OperationResult>(value)), 
                     typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence), 
                     base.Instance, "Delete", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence.Load"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact> Load
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence, 
                                                          dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact>(value)), 
                     typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence), base.Instance, "Load");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence.Save(DesignItRight.CleanCodeDemo.ContactManagement.IContact)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, dirccccdc::DesignItRight.Infrastructure.Common.OperationResult> SaveIContact
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Save", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence, 
                                                          dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact, 
                                                          dirccccdc::DesignItRight.Infrastructure.Common.OperationResult>(value)), 
                     typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence), 
                     base.Instance, "Save", typeof(dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContact));
            }
        }
    }
}
namespace DesignItRight.Infrastructure.Common.Logging.Moles
{
    /// <summary>Mole type of <see cref="T:DesignItRight.Infrastructure.Common.Logging.Logger"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = Logger")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MLogger
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger>
    {
        /// <summary>Initializes a new mole</summary>
        public MLogger()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MLogger(dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DesignItRight.Infrastructure.Common.Logging.Logger.Log(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger, string> LogString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Log", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger), 
                         (object)null, "Log", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:DesignItRight.Infrastructure.Common.Logging.Logger.ObjectInvariant"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger> ObjectInvariant
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ObjectInvariant", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger), (object)null, "ObjectInvariant");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DesignItRight.Infrastructure.Common.Logging.Moles.MLogger.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DesignItRight.Infrastructure.Common.Logging.Moles.MLogger.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DesignItRight.Infrastructure.Common.Logging.Moles.MLogger Bind(dirccccdc::DesignItRight.Infrastructure.Common.Logging.ILogger target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger, 
                                                                  global::DesignItRight.Infrastructure.Common.Logging.Moles.MLogger, dirccccdc::DesignItRight.Infrastructure.Common.Logging.ILogger>
                (this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.Infrastructure.Common.Logging.Logger.#ctor(DesignItRight.Infrastructure.Common.Logging.ILoggingSink)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger, dirccccdc::DesignItRight.Infrastructure.Common.Logging.ILoggingSink> ConstructorILoggingSink
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger), 
                     (object)null, ".ctor", typeof(dirccccdc::DesignItRight.Infrastructure.Common.Logging.ILoggingSink));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.Infrastructure.Common.Logging.Logger.Log(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> LogString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Log", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger, string>(value)), 
                                                                                       typeof(dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger), base.Instance, "Log", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.Infrastructure.Common.Logging.Logger.ObjectInvariant"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action ObjectInvariant
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ObjectInvariant", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger>(value)), 
                                                                                          typeof(dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger), base.Instance, "ObjectInvariant");
            }
        }
    }
}
namespace DesignItRight.Infrastructure.Common.Logging.Moles
{
    /// <summary>Mole type of <see cref="T:DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(dirccccd::DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = TextFileLoggingSink")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MTextFileLoggingSink
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<dirccccd::DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink>
    {
        /// <summary>Initializes a new mole</summary>
        public MTextFileLoggingSink()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MTextFileLoggingSink(dirccccd::DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink.Write(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dirccccd::DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink, string> WriteString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Write", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink), 
                         (object)null, "Write", typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::DesignItRight.Infrastructure.Common.Logging.Moles.MTextFileLoggingSink.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::DesignItRight.Infrastructure.Common.Logging.Moles.MTextFileLoggingSink.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(dirccccd::DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::DesignItRight.Infrastructure.Common.Logging.Moles.MTextFileLoggingSink Bind(dirccccdc::DesignItRight.Infrastructure.Common.Logging.ILoggingSink target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<dirccccd::DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink, 
                                                                  global::DesignItRight.Infrastructure.Common.Logging.Moles.MTextFileLoggingSink, 
                                                                  dirccccdc::DesignItRight.Infrastructure.Common.Logging.ILoggingSink>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<dirccccd::DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(dirccccd::DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink), 
                     (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink.Write(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> WriteString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Write", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<dirccccd::DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink, string>(value)), 
                     typeof(dirccccd::DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink), base.Instance, "Write", typeof(string));
            }
        }
    }
}
namespace DesignItRight.Internal.CleanCodeDemo.ContactManagement.Moles
{
    /// <summary>Stub type of <see cref="T:DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = Contact")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SContact
      : dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.Contact
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SContact()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SContact</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DesignItRight.CleanCodeDemo.ContactManagement.Moles
{
    /// <summary>Stub type of <see cref="T:DesignItRight.CleanCodeDemo.ContactManagement.ContactManager"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ContactManager")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SContactManager
      : dirccccd::DesignItRight.CleanCodeDemo.ContactManagement.ContactManager
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SContactManager(dirccccdc::DesignItRight.Infrastructure.Common.Logging.ILogger logger, dirccccdc::DesignItRight.CleanCodeDemo.ContactManagement.IContactPersistence contactPersistence)
        : base(logger, contactPersistence)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SContactManager</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DesignItRight.Internal.CleanCodeDemo.ContactManagement.Moles
{
    /// <summary>Stub type of <see cref="T:DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = DummyExampleContactPersistence")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SDummyExampleContactPersistence
      : dirccccd::DesignItRight.Internal.CleanCodeDemo.ContactManagement.DummyExampleContactPersistence
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SDummyExampleContactPersistence(dirccccdc::DesignItRight.Infrastructure.Common.Logging.ILogger logger)
        : base(logger)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SDummyExampleContactPersistence</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DesignItRight.Infrastructure.Common.Logging.Moles
{
    /// <summary>Stub type of <see cref="T:DesignItRight.Infrastructure.Common.Logging.Logger"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = Logger")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SLogger
      : dirccccd::DesignItRight.Infrastructure.Common.Logging.Logger
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SLogger(dirccccdc::DesignItRight.Infrastructure.Common.Logging.ILoggingSink loggingSink)
        : base(loggingSink)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SLogger</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace DesignItRight.Infrastructure.Common.Logging.Moles
{
    /// <summary>Stub type of <see cref="T:DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(dirccccd::DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = TextFileLoggingSink")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class STextFileLoggingSink
      : dirccccd::DesignItRight.Infrastructure.Common.Logging.TextFileLoggingSink
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public STextFileLoggingSink()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type STextFileLoggingSink</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
